{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Doc 'Como estruturar um projeto do Zero'","text":"<p>Este \u00e9 um projeto exemplo dedicado a demonstrar pr\u00e1ticas de refatora\u00e7\u00e3o. Neste espa\u00e7o, voc\u00ea encontrar\u00e1 uma descri\u00e7\u00e3o aprofundada da ETL, instru\u00e7\u00f5es para instala\u00e7\u00e3o, respostas a perguntas frequentes e mais. Seja voc\u00ea um colaborador ou simplesmente algu\u00e9m com interesse no projeto, esperamos que esta documenta\u00e7\u00e3o lhe seja \u00fatil.</p> <p>Al\u00e9m disso, esta documenta\u00e7\u00e3o pode ser integrada ao Confluence ou a uma intranet interna, facilitando o acesso e colabora\u00e7\u00e3o de todos os membros da equipe.</p>"},{"location":"#secoes","title":"Se\u00e7\u00f5es","text":"<ul> <li>Doc 'Como estruturar um projeto do Zero'</li> <li>Se\u00e7\u00f5es</li> <li>Introdu\u00e7\u00e3o</li> <li>Guia de Instala\u00e7\u00e3o</li> <li>FAQ</li> <li>Contato</li> </ul>"},{"location":"#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>O objetivo deste projeto \u00e9 demonstrar como t\u00e9cnicas de refatora\u00e7\u00e3o podem ser aplicadas para melhorar a qualidade do c\u00f3digo, otimizar a performance e tornar o software mais manuten\u00edvel. A refatora\u00e7\u00e3o \u00e9 essencial para manter o c\u00f3digo limpo e compreens\u00edvel, permitindo que equipes mantenham uma alta velocidade de desenvolvimento ao longo do tempo.</p>"},{"location":"#guia-de-instalacao","title":"Guia de Instala\u00e7\u00e3o","text":"<p>Aqui, voc\u00ea encontrar\u00e1 instru\u00e7\u00f5es detalhadas sobre como instalar e configurar o projeto em seu ambiente local. Seguir as instru\u00e7\u00f5es corretamente garante que voc\u00ea tenha uma experi\u00eancia suave ao trabalhar no projeto.</p>"},{"location":"#faq","title":"FAQ","text":"<p>Esta se\u00e7\u00e3o fornece respostas para perguntas frequentes. Se voc\u00ea tiver alguma d\u00favida que n\u00e3o est\u00e1 coberta aqui, sinta-se \u00e0 vontade para entrar em contato.</p>"},{"location":"#contato","title":"Contato","text":"<p>Para quaisquer d\u00favidas, feedbacks ou suporte relacionado ao projeto, voc\u00ea pode entrar em contato diretamente atrav\u00e9s do e-mail: renanjviana@gmail.com. Estou sempre disposto a ajudar!</p>"},{"location":"extract/","title":"Fun\u00e7\u00e3o para extra\u00e7\u00e3o dos dados","text":"<p>Fun\u00e7\u00e3o para extrair dados de arquivos Excel.</p>"},{"location":"extract/#app.pipeline.extract.extract_excel--parameters","title":"Parameters","text":"<p>input_folder : str     Pasta onde est\u00e3o os arquivos Excel</p>"},{"location":"extract/#app.pipeline.extract.extract_excel--returns","title":"Returns","text":"<p>List[pd.DataFrame]     Lista de DataFrames</p>"},{"location":"extract/#app.pipeline.extract.extract_excel--raises","title":"Raises","text":"<p>ValueError     N\u00e3o h\u00e1 arquivos Excel na pasta especificada</p> Source code in <code>app\\pipeline\\extract.py</code> <pre><code>def extract_excel(input_folder: str) -&gt; List[pd.DataFrame]:\n    \"\"\"Fun\u00e7\u00e3o para extrair dados de arquivos Excel.\n\n    Parameters\n    ----------\n    input_folder : str\n        Pasta onde est\u00e3o os arquivos Excel\n\n    Returns\n    -------\n    List[pd.DataFrame]\n        Lista de DataFrames\n\n    Raises\n    ------\n    ValueError\n        N\u00e3o h\u00e1 arquivos Excel na pasta especificada\n    \"\"\"\n    files = glob.glob(os.path.join(input_folder, \"*.xlsx\"))\n\n    if not files:\n        raise ValueError(\"No Excel files found in the specified folder\")\n\n    all_data = [pd.read_excel(file) for file in files]\n    return all_data\n</code></pre>"},{"location":"load/","title":"Fun\u00e7\u00e3o que salva os dados consolidados em um \u00fanico arquivo Excel","text":"<p>Salva um DataFrame em um arquivo Excel.</p>"},{"location":"load/#app.pipeline.load.load_em_um_novo_excel--parameters","title":"Parameters","text":"<p>df: pd.DataFrame     Data frame para exportar</p> str <p>Pasta onde ser\u00e1 salvo o arquivo</p> str <p>Nome do arquivo a ser salvo</p> Source code in <code>app\\pipeline\\load.py</code> <pre><code>def load_em_um_novo_excel(\n    df: pd.DataFrame, output_folder: str, output_file_name: str\n) -&gt; None:\n    \"\"\"Salva um DataFrame em um arquivo Excel.\n\n    Parameters\n    ----------\n    df: pd.DataFrame\n        Data frame para exportar\n\n    output_folder: str\n        Pasta onde ser\u00e1 salvo o arquivo\n\n    output_file_name: str\n        Nome do arquivo a ser salvo\n    \"\"\"\n    if not os.path.exists(output_folder):\n        os.makedirs(output_folder)\n\n    df.to_excel(\n        os.path.join(output_folder, output_file_name), index=False\n    )  # Retirado engine='openpyxl'\n</code></pre>"},{"location":"transform/","title":"Fun\u00e7\u00e3o para consolida\u00e7\u00e3o dos dados de v\u00e1rios arquivos Excel","text":"<p>Fun\u00e7\u00e3o para consolidar os dados de arquivos Excel.</p>"},{"location":"transform/#app.pipeline.transform.transforma_em_um_unico--parameters","title":"Parameters","text":"<p>all_data: List[pd.DataFrame]     Lista de DataFrames</p>"},{"location":"transform/#app.pipeline.transform.transforma_em_um_unico--returns","title":"Returns","text":"<p>consolidated_df : pd.DataFrame     DataFrame consolidado</p>"},{"location":"transform/#app.pipeline.transform.transforma_em_um_unico--raises","title":"Raises","text":"<p>ValueError     N\u00e3o h\u00e1 arquivos Excel para concatenar</p> Source code in <code>app\\pipeline\\transform.py</code> <pre><code>def transforma_em_um_unico(all_data: List[pd.DataFrame]) -&gt; pd.DataFrame:\n    \"\"\"Fun\u00e7\u00e3o para consolidar os dados de arquivos Excel.\n\n    Parameters\n    ----------\n    all_data: List[pd.DataFrame]\n        Lista de DataFrames\n\n    Returns\n    -------\n    consolidated_df : pd.DataFrame\n        DataFrame consolidado\n\n    Raises\n    ------\n    ValueError\n        N\u00e3o h\u00e1 arquivos Excel para concatenar\n    \"\"\"\n    if not all_data:\n        raise ValueError(\"No data to transform\")\n\n    consolidated_df = pd.concat(all_data, axis=0, ignore_index=True)\n    return consolidated_df\n</code></pre>"}]}